---
title: "Geom Gallery - Geometry-based Patterns"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Geom Gallery - Geometry-based Patterns}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  dev = "ragg_png",
  fig.path = "images/gallery-geometry-",
  fig.width  = 8,
  fig.height = 6
)
```

```{r setup}
suppressPackageStartupMessages({
  library("ggplot2")
  library("ggpattern")
  require("dplyr", quietly = TRUE)
  require("maps", quietly = TRUE)
  require("sf", quietly = TRUE)
})
```

## B&W Example

```{r bar-bw, fig.width = 12, fig.height = 9, fig.cap=""}
df <- data.frame(level = c("a", "b", "c", 'd'), outcome = c(2.3, 1.9, 3.2, 1))

p <- ggplot(df, aes(level, outcome)) +
  geom_col_pattern(
    aes(pattern = level, pattern_angle = level, pattern_spacing = level), 
    fill            = 'white',
    colour          = 'black', 
    pattern_density = 0.35, 
    pattern_fill    = 'black',
    pattern_colour  = 'black'
  ) +
  theme_bw() +
  labs(
    title    = "ggpattern::geom_col_pattern()",
    subtitle = 'geometry-based patterns'
  ) +
  scale_pattern_spacing_discrete(range = c(0.01, 0.05)) + 
  theme(legend.position = 'none') + 
  coord_fixed(ratio = 1)

p
```

## Colour Example

```{r bar-colour, fig.width = 12, fig.height = 9, fig.cap=""}
p <- ggplot(df, aes(level, outcome)) +
  geom_col_pattern(
    aes(pattern = level, fill = level, pattern_fill = level), 
    colour                   = 'black', 
    pattern_density          = 0.35, 
    pattern_key_scale_factor = 1.3) +
  theme_bw() +
  labs(
    title    = "ggpattern::geom_col_pattern()",
    subtitle = 'geometry-based patterns'
  ) +
  scale_pattern_fill_manual(values = c(a='blue', b='red', c='yellow', d='darkgreen')) + 
  theme(legend.position = 'none') + 
  coord_fixed(ratio = 1)

p
```

## `geom_bar_pattern()`

```{r bar, fig.width = 12, fig.height = 9, fig.cap=""}
p <- ggplot(mpg, aes(class)) +
  geom_bar_pattern(
    aes(
      pattern = class, 
      pattern_angle = class
    ), 
    fill            = 'white', 
    colour          = 'black',
    pattern_spacing = 0.025
  ) +
  theme_bw(18) +
  labs(title = "ggpattern::geom_bar_pattern()") + 
  theme(legend.position = 'none') +
  coord_fixed(ratio = 1/15) + 
  scale_pattern_discrete(guide = guide_legend(nrow = 1))

p
```

## pie graph with `geom_bar_pattern()`

```{r pie, fig.width = 12, fig.height = 9, fig.cap=""}
df <- data.frame(
  group = factor(c("Cool", "But", "Use", "Less"), levels = c("Cool", "But", "Use", "Less")),
  value = c(10, 20, 30, 40)
)

p <- ggplot(df, aes(x="", y = value, pattern = group, pattern_angle = group))+
  geom_bar_pattern(
    width                = 1, 
    stat                 = "identity", 
    fill                 = 'white', 
    colour               = 'black',
    pattern_aspect_ratio = 1, 
    pattern_density      = 0.3
  ) +
  coord_polar("y", start=0) + 
  theme_void(20) + 
  theme(
    legend.key.size = unit(2, 'cm')
  ) + 
  labs(title = "ggpattern::geom_bar_pattern() + coord_polar()")

p
```

## `geom_bin2d_pattern()`

```{r bin2d, fig.width = 12, fig.height = 9, fig.cap=""}
p <- ggplot(diamonds, aes(x, y)) + 
  xlim(4, 10) + ylim(4, 10) +
  geom_bin2d_pattern(aes(pattern_spacing = after_stat(density)), 
                     fill = 'white', bins = 6, 
                     colour = 'black', linewidth = 1) +
  theme_bw(18) +
  theme(legend.position = 'none') + 
  labs(title = "ggpattern::geom_bin2d_pattern()")

p
```

## `geom_boxplot_pattern()`

```{r boxplot, fig.width = 12, fig.height = 9, fig.cap=""}
p <- ggplot(mpg, aes(class, hwy)) +
  geom_boxplot_pattern(
    aes(
      pattern      = class, 
      pattern_fill = class
    ), 
    pattern_spacing = 0.03
  ) +
  theme_bw(18) +
  labs(title = "ggpattern::geom_boxplot_pattern()") + 
  theme(legend.position = 'none') + 
  coord_fixed(1/8)

p
```

## `geom_col_pattern()`

```{r col, fig.width = 12, fig.height = 9, fig.cap=""}
df <- data.frame(trt = c("a", "b", "c"), outcome = c(2.3, 1.9, 3.2))

p <- ggplot(df, aes(trt, outcome)) +
  geom_col_pattern(
    aes(
      pattern = trt, 
      fill    = trt
    ), 
    colour                   = 'black', 
    pattern_density          = 0.5, 
    pattern_key_scale_factor = 1.11
  ) +
  theme_bw(18) +
  labs(title = "ggpattern::geom_col_pattern()") + 
  theme(legend.position = 'none') +  
  coord_fixed(ratio = 1/2)

p
```

## `geom_crossbar_pattern()`

```{r crossbar, fig.width = 12, fig.height = 9, fig.cap=""}
df <- data.frame(
  trt = factor(c(1, 1, 2, 2)),
  resp = c(1, 5, 3, 4),
  group = factor(c(1, 2, 1, 2)),
  upper = c(1.1, 5.3, 3.3, 4.2),
  lower = c(0.8, 4.6, 2.4, 3.6)
)

p <- ggplot(df, aes(trt, resp, colour = group)) +
    geom_crossbar_pattern(
      aes(
        ymin          = lower, 
        ymax          = upper, 
        pattern_angle = trt, 
        pattern       = group
      ), width        = 0.2, 
      pattern_spacing = 0.02
    ) +
    theme_bw(18) +
    labs(title = "ggpattern::geom_crossbar_pattern()") + 
    theme(legend.position = 'none') + 
    coord_fixed(ratio = 1/3)

p
```

## `geom_density_pattern()`

```{r density, fig.width = 12, fig.height = 9, fig.cap=""}
p <- ggplot(mtcars) +
   geom_density_pattern(
     aes(
       x            = mpg, 
       pattern_fill = as.factor(cyl), 
       pattern      = as.factor(cyl)
     ), 
     fill                     = 'white', 
     pattern_key_scale_factor = 1.2,
     pattern_density          = 0.4
   ) +
   theme_bw(18) +
   labs(title = "ggpattern::geom_density_pattern()") + 
   theme(legend.key.size = unit(2, 'cm')) +
   coord_fixed(ratio = 100)

p
```

## `geom_map_pattern()`

```{r map, fig.width = 12, fig.height = 9, fig.cap=""}
if (require("maps")) {

crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)

states_map <- map_data("state")

p <- ggplot(crimes, aes(map_id = state)) +
    geom_map_pattern(
      aes(
        # fill            = Murder,
        pattern_fill    = Murder,
        pattern_spacing = state,
        pattern_density = state,
        pattern_angle   = state,
        pattern         = state
      ),
      fill   = 'white',
      colour = 'black',
      pattern_aspect_ratio = 1.8,
      map    = states_map
    ) +
    expand_limits(x = states_map$long, y = states_map$lat) +
    coord_map() +
    theme_bw(18) +
    labs(title = "ggpattern::geom_map_pattern()") + 
    scale_pattern_density_discrete(range = c(0.01, 0.3)) + 
    scale_pattern_spacing_discrete(range = c(0.01, 0.03)) + 
    theme(legend.position = 'none')

p

}
```

## `geom_polygon_pattern()`

```{r polygon, fig.width = 12, fig.height = 9, fig.cap=""}
angle <- seq(0, 2*pi, length.out = 7) + pi/6
polygon_df <- data.frame(
  angle = angle,
  x     = cos(angle),
  y     = sin(angle)
)

p <- ggplot(polygon_df) +
  geom_polygon_pattern(
    aes(x = x, y = y), 
    fill            = 'white', 
    colour          = 'black', 
    pattern_spacing = 0.15, 
    pattern_density = 0.4, 
    pattern_fill    = 'lightblue', 
    pattern_colour  = '#002366',
    pattern_angle   = 45
  ) + 
  labs(title = "ggpattern") + 
  coord_equal() + 
  theme_bw(25) + 
  theme(axis.title = element_blank())

p
```

## `geom_rect_pattern()`

```{r rect, fig.width = 12, fig.height = 9, fig.cap=""}
plot_df <- data.frame(
  xmin    = c(0, 10),
  xmax    = c(8, 18),
  ymin    = c(0, 10),
  ymax    = c(5, 19),
  type    = c('a', 'b'),
  angle   = c(45, 0),
  pname   = c('circle', 'circle'),
  pcolour = c('red', 'blue'),
  pspace  = c(0.03, 0.05),
  size    = c(0.5, 1),
  stringsAsFactors = FALSE
)

p <- ggplot(plot_df) +
  geom_rect_pattern(
    aes(
      xmin=xmin, ymin=ymin, xmax=xmax, ymax=ymax,
      pattern_angle   = I(angle),
      pattern_colour  = I(pcolour),
      pattern_spacing = I(pspace),
      pattern_size    = I(size)
    ),
    pattern         = 'circle',
    fill            = 'white',
    colour          = 'black',
    pattern_density = 0.3
  ) +
  theme_bw(18) +
  labs(title = "ggpattern::geom_rect_pattern()") + 
  theme(legend.key.size = unit(1.5, 'cm'))

p
```
## `geom_ribbon_pattern()`

```{r ribbon, fig.width = 12, fig.height = 9, warning=FALSE, fig.cap=""}
huron <- data.frame(year = 1875:1972, level = as.vector(LakeHuron))

p <- ggplot(huron, aes(year)) +
  geom_ribbon_pattern(
    aes(
      ymin = level - 1, 
      ymax = level + 1
    ), 
    fill            = NA, 
    colour          = 'black',
    pattern         = 'circle',
    pattern_spacing = 0.03, 
    pattern_density = 0.5,
    pattern_angle   = 30,
    outline.type    = 'full'
  ) +
  theme_bw(18) +
  labs(title = "ggpattern::geom_ribbon_pattern()")

p
```
## `geom_sf_pattern()`

```{r sf, fig.width = 12, fig.height = 9, fig.cap=""}
if (require("dplyr") && require("sf")) {

nc <- sf::st_read(system.file("shape/nc.shp", package = "sf"), quiet = TRUE)
nc <- nc %>% filter(between(CNTY_ID, 1820, 1830))

p <- ggplot(nc) +
  geom_sf_pattern(
    aes(
      pattern = NAME, 
      fill    = NAME
    ),
    pattern_aspect_ratio = 2.8
  ) +
  theme_bw(15) + 
  theme(legend.key.size = unit(1.5, 'cm')) +
  labs(title = "ggpattern::geom_sf_pattern()")

p

}
```

## `geom_tile_pattern()`

```{r tile, fig.width = 12, fig.height = 9, fig.cap=""}
df <- data.frame(
  x = rep(c(2, 5, 7, 9, 12), 2),
  y = rep(c(1, 2), each = 5),
  z = factor(rep(1:5, each = 2)),
  w = rep(diff(c(0, 4, 6, 8, 10, 14)), 2)
)

p <- ggplot(df, aes(x, y)) +
  geom_tile_pattern(
    aes(
      fill    = z, 
      pattern = z
    ), 
    colour = "grey50"
  ) +
  theme_bw(18) +
  labs(title = "ggpattern::geom_tile_pattern()") + 
  theme(
    legend.position = 'bottom',
    legend.key.size = unit(1.5, 'cm')
  ) + 
  coord_fixed(ratio = 4)

p
```

## `geom_violin_pattern()`

```{r violin, fig.width = 12, fig.height = 9, fig.cap=""}
p <- ggplot(mtcars, aes(as.factor(cyl), mpg)) +
  geom_violin_pattern(aes(pattern = as.factor(cyl))) +
  theme_bw(18) +
  labs(title = "ggpattern::geom_violin_pattern()") + 
  theme(
    legend.key.size  = unit(2, 'cm')
  ) + 
  coord_fixed(1/15)

p
```
